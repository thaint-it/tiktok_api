version: '3'
services:
  db:
    image: mysql:8
    container_name: tiktok_db
    restart: always
    volumes:
      - mysql_data:/var/lib/msql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASS}", "-e", "SELECT 1"]
      timeout: 20s
      retries: 10
    networks:
      - db_network
  
  redis:
      image: redis:latest
      container_name: tiktok_redis
      volumes:
        - redis_data:/data  # Mount a volume to persist data
      networks: 
        - db_network
      ports:
        - "6379:6379"  # Optional, to access Redis externally
    
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tiktok_api
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
          condition: service_healthy
    networks:
      - db_network


  asgiserver:
    build:            
      context: .
      dockerfile: Dockerfile
    container_name: asgiserver
    command: daphne tiktok_api.asgi:application -b 0.0.0.0 -p 9000
    volumes:
      - .:/usr/src/app
    ports:
      - "9000:9000"
    networks: 
      - db_network
    depends_on:
      - backend
    links:
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: tiktok_api.settings  # Ensure this is correct
   
networks:
  db_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:

