"""
Django settings for tiktok_api project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from posixpath import dirname
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(env_file=os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y!0zv4bh*_de)#-%83xrz^4w3och7ot=c!je0ycz2du5+zq3e@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', True)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', cast=str, default='*')


# Application definition

THIRD_PARTY_APPS = [
    'rest_framework',
    'channels',
]

LOCAL_APPS = [
    'users',
    'posts',
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS = THIRD_PARTY_APPS + LOCAL_APPS + DJANGO_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tiktok_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tiktok_api.wsgi.application'
ASGI_APPLICATION = 'tiktok_api.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',  # Use Redis as the backend
        'CONFIG': {
            "hosts": [('redis', 6379)],  # Redis server address
        },
    },
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Database
DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.mysql",
        "NAME": env.str('DB_NAME','tiktok'),  # To developer: change the database name to timberscada
        "HOST": env.str('DB_HOST', 'db'),
        "USER": env.str('DB_USER','t11n'),
        "PASSWORD": env.str('DB_PASS','123456'),
        "PORT": env.int('DB_PORT', 3306),
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Static files
STATIC_URL = '/static/'  # Ensure this has a leading and trailing slash

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'middlewares.authentication.AuthenticationJWT',
    ],
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
    "EXPIRED_FOREVER": "2000-10-10 00:00:00",
    "DEFAULT_THROTTLE_RATES": {
        "custom_user": "150/minute",
    },
    "OVERRIDE_THROTTLE_RATES": {"special": "10000/hour"},
}


FILE_DIR = dirname(__file__)

JWT_AUTH = {
    'JWT_PUBLIC_KEY': open(dirname(FILE_DIR) + '/pub_key.pem', 'rb').read(),
    'JWT_PRIVATE_KEY': open(dirname(FILE_DIR) + '/privkey.pem', 'rb').read(),
    'JWT_ALGORITHM': 'RS256',
}


# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'middlewares.authentication.AuthenticationJWT',
#     ],
#     "EXPIRED_FOREVER": "2000-10-10 00:00:00",
#     "DEFAULT_THROTTLE_RATES": {
#         "custom_user": "150/minute",
#     },
#     "OVERRIDE_THROTTLE_RATES": {"special": "10000/hour"},
# }

# REST_FRAMEWORK_CACHE = {
#     "DEFAULT_CACHE_TIMEOUT": 86400,  # Default is 1 day
# }

